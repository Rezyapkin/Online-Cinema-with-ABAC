[uwsgi]

chdir = /opt/app  #docke chdir() to specified directory before each spooler task
wsgi-file = server/wsgi.py
socket = :8000
protocol = http
uid = www-data
gid = www-data

master = true
no-orphans = true  # automatically kill workers if master dies (can be dangerous for availability)
die-on-term = true  # die on SIGTERM
need-app = true # exit if no app can be loaded
lazy-apps = true  # lazy-load

processes = $(UWSGI_PROCESSES)
enable-threads = true  # enable threads
threads = $(UWSGI_THREADS)  # up to processes x threads per time
single-interpreter = true  # do not use multiple interpreters (where available)

max-requests = 5000  # worker rerun, avoid mem leak
reload-on-rss = 1024  # reload worker when exceeds max mem in MB
reload-mercy = 10  # set the maximum time we wait for workers and other processes to die during reload/shutdown
worker-reload-mercy = 60  # set the maximum time (in seconds) a worker can take to reload/shutdown
harakiri = $(UWSGI_HARAKIRI)  # принудительно завершить запрос от пользователя через секунд
harakiri-verbose = true

post-buffering = 1048576  # прежде чем передать запрос приложению uWSGI считает в памяти его содержимое
buffer-size = 65535  # размер буфера для чтения HTTP-заголовков
vacuum  true  # try to remove all of the generated file/sockets
